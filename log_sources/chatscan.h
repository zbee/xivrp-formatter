// XIVRP-Formatter Copyright (C) 2024 Ethan Henderson <ethan@zbee.codes>
// Licensed under GPLv3 - Refer to the LICENSE file for the complete text

#ifndef XIVRP_FORMATTER_CHATSCAN_H
#define XIVRP_FORMATTER_CHATSCAN_H

#include ".log_source.h"

namespace log_source {

class chatscan : private Ilog_source {
public:
  enum source source = source::chatscan;

  /**
   * @brief Method to check a given log is parseable by this source, i.e. to
   * intelligently find the source of a user-provided log file, and to validate
   * the log file
   * @param log The log file path
   * @return Whether the log file is parseable by this source
   * @see settings::loader::verify_log_file()
   */
  bool log_is_this_source(std::string log) override;

  /**
   * @brief Method to find log files that are generated by this source
   * @return A map of log file paths and their last modified time, for selecting
   * the most recent logs
   */
  std::map<std::string, std::chrono::system_clock::time_point>
  find_logs_of_this_source() override;

  /**
   * @brief Method to parse messages from a given log log
   * @param log The path to the log log, likely from the map returned by
   * ILog_source::find_logs_of_this_source or from the
   * settings::structure::log_file_path
   * @return A messages::structure object
   * @see messages::structure::log_file_path
   */
  messages::structure parse_messages(std::string log) override;
};

} // namespace log_source

#endif // XIVRP_FORMATTER_CHATSCAN_H
